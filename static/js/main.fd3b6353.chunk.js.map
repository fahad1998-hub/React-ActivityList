{"version":3,"sources":["Components/Form.jsx","Components/Todo.jsx","Components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","type","className","onChange","e","target","value","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","map","items","filter","el","TodoList","App","useState","useEffect","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","localTodo","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAEe,SAASA,EAAT,GAAwD,IAAzCC,EAAwC,EAAxCA,aAAaC,EAA2B,EAA3BA,MAAMC,EAAqB,EAArBA,SAASC,EAAY,EAAZA,UAkBxD,OACE,8BACE,iCACE,uBAAOC,KAAK,OAAOC,UAAU,aAAaC,SAnBzB,SAACC,GAClBP,EAAaO,EAAEC,OAAOC,QAkB8CA,MAASN,IAC7E,wBAAQE,UAAU,cAAcD,KAAK,SAASM,QAhBxB,SAACH,GACvBA,EAAEI,iBAEFT,EAAS,GAAD,mBACDD,GADC,CACK,CACLW,KAAMT,EAAWU,WAAU,EAAOC,GAAkB,GAAdC,KAAKC,aAGnDhB,EAAa,KAQb,SAEE,mBAAGK,UAAU,8B,WCKRY,EA9BF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMhB,EAAsB,EAAtBA,SAAUD,EAAY,EAAZA,MAkB9B,OACE,sBAAKI,UAAU,OAAf,UACE,oBAAIA,UAAS,oBAAea,EAAKL,UAAY,YAAc,IAA3D,SAAoEK,EAAKN,OACzE,wBAASF,QAjBW,WACtBR,EACED,EAAMkB,KAAI,SAACC,GACT,OAAIA,EAAMN,KAAOI,EAAKJ,GACb,2BACFM,GADL,IAEEP,WAAYO,EAAMP,YAGfO,OAQ4Bf,UAAU,eAA/C,SACE,mBAAGA,UAAU,mBAEf,wBAAQK,QAvBO,WACjBR,EAASD,EAAMoB,QAAO,SAACC,GAAD,OAAQA,EAAGR,KAAOI,EAAKJ,QAsBdT,UAAU,YAAvC,SACE,mBAAGA,UAAU,uBCZNkB,EAXE,SAAC,GAAyB,IAAvBtB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEvB,OACI,qBAAKG,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SACKJ,EAAMkB,KAAI,SAAAD,GAAI,OAAK,cAAC,EAAD,CAAMA,KAAMA,EAAoBjB,MAAOA,EAAOC,SAAUA,GAAjCgB,EAAKJ,YCqCjDU,MArCf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOtB,EAAP,KAAkBH,EAAlB,KACA,EAA0ByB,mBAAS,IAAnC,mBAAOxB,EAAP,KAAcC,EAAd,KACAwB,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,MACC,CAAC3B,IAIJ,IAAM2B,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAU/B,KAEzC0B,EAAgB,WACpB,GAAIE,aAAaI,SAAQ,GACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChD/B,EAASgC,KAKb,OACE,sBAAK7B,UAAU,MAAf,UACG,iCACD,+DAEF,cAACN,EAAD,CAAOI,UAAaA,EAAWH,aAAeA,EAAcC,MAAOA,EAAOC,SAAYA,IACtF,cAAC,EAAD,CAAUA,SAAUA,EAAUD,MAASA,QC5B5BmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd3b6353.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Form({setInputText,todos,setTodos,inputText}) {\r\n    // const [input, setInput] = useState('');\r\n    const inputHandler = (e) => {\r\n        setInputText(e.target.value);\r\n        // console.log(e.target.value);\r\n    }\r\n    const submitTodoHnadler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        setTodos([\r\n            ...todos,{\r\n                text: inputText, completed:false, id: Math.random()*20\r\n            }\r\n        ]);\r\n        setInputText('');\r\n        // console.log(inputText);\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n      <form>\r\n        <input type=\"text\" className=\"todo-input\" onChange = {inputHandler} value = {inputText} />\r\n        <button className=\"todo-button\" type=\"submit\" onClick= {submitTodoHnadler}>\r\n          {/* <span class=\"material-icons-outlined\"></span> */}\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        {/* <div className=\"select\">\r\n          <select name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nconst Todo = ({ todo, setTodos, todos }) => {\r\n  const deleteTodo = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const CompleteHandler = () => {\r\n    setTodos(\r\n      todos.map((items) => {\r\n        if (items.id === todo.id) {\r\n          return {\r\n            ...items,\r\n            completed: !items.completed\r\n          };\r\n        }\r\n        return items; \r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : ''  }`}>{todo.text}</li>\r\n      <button  onClick = {CompleteHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteTodo} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Todo;\r\n","\r\nimport React from 'react';\r\nimport Todo from './Todo';\r\nconst TodoList = ({ todos, setTodos }) => {\r\n\r\n    return (\r\n        <div className='todo-container' >\r\n            <ul className='todo-list' >\r\n                {todos.map(todo => (<Todo todo={todo} key={todo.id} todos={todos} setTodos={setTodos} />))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","\nimport './App.css';\nimport Form from './Components/Form';\nimport TodoList from './Components/TodoList';\nimport React, {useState, useEffect} from 'react';\n\n// HOOKS ARE USED \n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n  useEffect(() => {\n    saveLocalTodos();\n  }, [todos])\n\n\n  // SAVE TO LOCAL STORAGE\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos' === null)) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let localTodo = JSON.parse(localStorage.getItem('todos'));\n      setTodos(localTodo);\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n       <header>\n      <h1>WHAT'S YOUR PLAN FOR TODAY?</h1>\n    </header>\n    <Form  inputText = {inputText} setInputText= {setInputText} todos={todos} setTodos = {setTodos}/>\n    <TodoList setTodos={setTodos} todos = {todos}/>\n    </div> \n  );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}